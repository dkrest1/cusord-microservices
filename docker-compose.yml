version: '3.8'

services:
  # Zookeeper service
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    ports:
      - 2181:2181
  # kafka service
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    volumes:
      - ./db-data/kafka:/var/lib/kafka
  # customer service
  customer:
    container_name: customer-service
    build: ./customer-service
    image: customer
    ports:
      - '${APP_PORT1}:${APP_PORT1}'
    volumes:
      - ./customer:/home/app
    depends_on:
      - kafka
      - customer-db
  customer-db:
    container_name: customer-db
    image: 'postgres:14.1-alpine'
    environment:
      POSTGRES_USER: ${DB_USERNAME1}
      POSTGRES_PASSWORD: ${DB_PASSWORD1}
      POSTGRES_DB: ${DB_DATABASE1}
    ports:
      - '${DB_PORT1}:${DB_PORT1}'
    volumes:
      - db-data:/var/lib/postgresql/data
  # order service
  order:
    container_name: order-service
    build: ./order-service
    image: order
    ports:
      - '${APP_PORT2}:${APP_PORT2}'
    volumes:
      - ./order:/home/app
    depends_on:
      - kafka
      - order-db
  order-db:
    container_name: order-db
    image: 'mysql:8.0.26'
    environment:
      MYSQL_USER: ${DB_USERNAME2}
      MYSQL_PASSWORD: ${DB_PASSWORD2}
      MYSQL_DATABASE: ${DB_DATABASE2}
      MYSQL_ROOT_PASSWORD: ${DB_DATABASE_ROOT}
    ports:
      - '${DB_PORT2}:${DB_PORT2}'
    volumes:
      - db-data:/var/lib/mysql/data
volumes:
  db-data:
